<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Christoffer Hauthorn</title>
    <description>My name is Christoffer Hauthorn Boisen, and I'm one of the technical co-founders of Emplate ApS and a Computer Science student at Aarhus University.
</description>
    <link>http://hauthorn.me/</link>
    <atom:link href="http://hauthorn.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 12 Apr 2017 17:56:32 +0200</pubDate>
    <lastBuildDate>Wed, 12 Apr 2017 17:56:32 +0200</lastBuildDate>
    <generator>Jekyll v3.4.0</generator>
    
      <item>
        <title>Algorithm Engineering at AU</title>
        <description>&lt;p&gt;I’ve finished a course at Aarhus University called &lt;em&gt;Algorithm Engineering&lt;/em&gt; taught by &lt;a href=&quot;http://cs.au.dk/~gerth/&quot;&gt;Gerth Brodal&lt;/a&gt;.
The &lt;a href=&quot;http://kursuskatalog.au.dk/da/course/65711&quot;&gt;course description&lt;/a&gt; reads:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The participants must at the end of the course be able to:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;&lt;strong&gt;Construct&lt;/strong&gt; and &lt;strong&gt;analyze&lt;/strong&gt; performance experiments for algorithm implementations.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;strong&gt;Construct&lt;/strong&gt; and &lt;strong&gt;implement&lt;/strong&gt; algorithms optimized towards efficient usage of the underlying computer architecture.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hauthorn/ae-project&quot;&gt;We implemented&lt;/a&gt; algorithms for 3 seperate projects. The projects are written in C++, and we use CMAKE to manage the build process. We used &lt;a href=&quot;http://icl.utk.edu/papi/&quot;&gt;PAPI&lt;/a&gt; to collect data from the hardware (level 1 and 2 cache misses, branch mispredictions etc.), and finally plottet the results using Gnuplot.&lt;/p&gt;

&lt;p&gt;Some of the interesting findings include how big an impact memory layout has on the running time of your (theoretically) fast algorithm. When implementing binary search, something as simple as changing the ordering of the searched array yields large performance gains.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ae-project/it21_comparison_runtime.png&quot; alt=&quot;Comparison binary search&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;img-text&quot;&gt;Plotting the different algorithms against each other immediately shows how engineering an algorithm toward efficient hardware usage has a big impact on performance.&lt;/p&gt;

&lt;p&gt;Another finding was that sometimes doing more results in faster algorithms. Another project involved matrix multiplication. One major improvement was transposing the matrix to multiply with. This allows for sequential memory access in both matrices, which is a lot faster than accessing indices that are far apart (because they are different rows in the matrix). This means that doing more work (most CPU instructions) is a lot faster than having to wait for the memory. Even for matrices of size &lt;script type=&quot;math/tex&quot;&gt;100 x 100&lt;/script&gt;, the extra &lt;script type=&quot;math/tex&quot;&gt;\mathcal{O}(n^2)&lt;/script&gt; required to transpose the matrix is worth the investment. If the same matrix is to be using in multiple calculations, the overhead will be even less significant. This is especially true since (naive) matrix multiplication require &lt;script type=&quot;math/tex&quot;&gt;\mathcal{O}(n^3)&lt;/script&gt; multiplications.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ae-project/allRun1_comparison_runtime.png&quot; alt=&quot;Comparison matrix multiplication&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;img-text&quot;&gt;Different tricks to achive faster matrix multiplication. Note that transposing matrices before multiplying is significantly faster.&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Apr 2017 17:00:00 +0200</pubDate>
        <link>http://hauthorn.me/2017/04/12/algorithm-engineering</link>
        <guid isPermaLink="true">http://hauthorn.me/2017/04/12/algorithm-engineering</guid>
        
        
        <category>uni</category>
        
      </item>
    
      <item>
        <title>Bachelor project: GEAR</title>
        <description>&lt;p&gt;I’ve finished my bachelor project for the Bachelor in IT at Aarhus University. The project ran for 6 months total, alongside other courses. The project was done by me and 3 other bachelor students. The question we tried to answer with this project was:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“How can we use a combination of gaze- and speech-interaction to aid software developers?”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our vision for the project was established early. We wanted the developer to &lt;em&gt;simply look at the code, and say what he wants to happen&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/gear-usage.jpg&quot; alt=&quot;Gear screen&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;img-text&quot;&gt;The prototype in action: A developer simply looks at the screen, and speaks to his computer.&lt;/p&gt;

&lt;h2 id=&quot;gear---gaze-enhanced-audio-recognition&quot;&gt;GEAR - Gaze Enhanced Audio Recognition&lt;/h2&gt;
&lt;p&gt;The prototype consists of 3 parts:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;An eye-tracker&lt;/li&gt;
  &lt;li&gt;A microphone (and voice recognition software)&lt;/li&gt;
  &lt;li&gt;The IDE (we used &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;Jetbrains IntelliJ&lt;/a&gt;, courtesy the student license through AU)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We used a &lt;a href=&quot;http://tobiigaming.com/product/tobii-eyex/&quot;&gt;Tobii EyeX&lt;/a&gt; to track the users gaze on the screen. This allowed the user to switch between editor tabs without using the mouse, and direct his voice command to the appropriate editor pane. We used the C# SDK for Windows, which allowed us to get a continous stream of input from the tracking bar.&lt;/p&gt;

&lt;p&gt;We decided to integrate with &lt;a href=&quot;http://www.nuance.com/dragon/index.htm&quot;&gt;Dragon NaturallySpeaking&lt;/a&gt; through DragonFly. This allowed us to create a python script that can react to certain sentences and commands, and emulate keyboard and mouse input to the IDE. The python script communicated with the C# programme over TCP to know where the user is currently looking.&lt;/p&gt;

&lt;p&gt;You can watch a presentation of the project on Youtube below (remember to watch in fullscreen 1080p).&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/8wgXM70eQag&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sat, 04 Feb 2017 14:00:00 +0100</pubDate>
        <link>http://hauthorn.me/2017/02/04/bachelor-gear</link>
        <guid isPermaLink="true">http://hauthorn.me/2017/02/04/bachelor-gear</guid>
        
        
        <category>uni</category>
        
      </item>
    
      <item>
        <title>Minesweeper holidays</title>
        <description>&lt;p&gt;I’ve created a small minesweeper game in Angular 2 to refresh my Typescript in the holidays. I decided to give the &lt;a href=&quot;https://github.com/angular/angular-cli&quot;&gt;Angular-CLI&lt;/a&gt; a spin, and check the current state of &lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also wanted to try some game AI technigues, so the game and the AI is inspired by a chapter in &lt;a href=&quot;https://www.amazon.com/Introduction-Game-AI-Neil-Kirby/dp/1598639986&quot;&gt;Introduction to Game AI&lt;/a&gt;. The original project in the book is implemented in Visual Basic, and with quite a different aesthetic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minesweep-ai.png&quot; alt=&quot;AI in action&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;img-text&quot;&gt;The rules based AI in action. Notice the sidebar text is a little cramped.&lt;/p&gt;

&lt;h4 id=&quot;the-ai&quot;&gt;The AI&lt;/h4&gt;
&lt;p&gt;The AI is a rules based AI. Every iteration, every possible rules efficiency is evaluated, and the one yielding the highest score wins. For example, the “mark fields as bombs”-rule has a score equal to the number of fields we are 100% sure are bombs at the current state of the board.&lt;/p&gt;

&lt;p&gt;The AI picks the rule with the highest score at every iteration. This usually results in it either marking a set of fields as bombs, or exposing a set of fields that it knows are safe.&lt;/p&gt;

&lt;p&gt;I choose not to make the AI “guess” when there are no more fields so safely mark or expose (it happens in minesweeper), as I do not want to take away the &lt;em&gt;thrill of failing&lt;/em&gt; away from the user.&lt;/p&gt;

&lt;h4 id=&quot;take-it-for-a-spin&quot;&gt;Take it for a spin&lt;/h4&gt;
&lt;p&gt;You can &lt;a href=&quot;http://hauthorn.me/ng-minesweep/&quot;&gt;try the minesweeper game&lt;/a&gt; here on this site. It’s published using github pages, which is easy to do using the angular cli (just run &lt;code class=&quot;highlighter-rouge&quot;&gt;ng github-pages:deploy&lt;/code&gt;, and you are golden).&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Dec 2016 20:12:37 +0100</pubDate>
        <link>http://hauthorn.me/2016/12/29/minesweeper-holidays</link>
        <guid isPermaLink="true">http://hauthorn.me/2016/12/29/minesweeper-holidays</guid>
        
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>My work at Emplate</title>
        <description>&lt;p&gt;As Co-Founder and partly responsible for the tech stuff at Emplate, I’ve been at the center of the initial design and development of the Emplate platform and services, and is continually doing the best I can along with Søren Gregersen at Emplate to build the best features we can.&lt;/p&gt;

&lt;p&gt;So far, we’ve built a bunch of stuff that I’m proud of. Here is some of the stuff we’ve built:&lt;/p&gt;

&lt;h3 id=&quot;beacon-management-system-version-1&quot;&gt;Beacon Management System, version 1&lt;/h3&gt;
&lt;p&gt;The Emplate dashboard, beacon management and platform was initially built using Laravel 4 (then 5.0, 5.1 and 5.2), which is depicted below. The mobile clients fetched content and posted analytics data using an API that was specifically designed for our initial clients and use case. An example of the &lt;a href=&quot;https://m.signalvnoise.com/the-majestic-monolith-29166d022228&quot;&gt;majestic monolith&lt;/a&gt; serving mobile apps and the administrative frontend. It was a design pattern which was a good fit for our developer team, which just consisted of the 2 technical founders.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emplate.it/wp-content/uploads/2013/10/hvordan-virker-emplate.png&quot; alt=&quot;How Emplate Works&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;img-text&quot;&gt;The content was created in the editor to the left, and sent to the clients.&lt;/p&gt;

&lt;h4 id=&quot;overview-and-editor&quot;&gt;Overview and Editor&lt;/h4&gt;
&lt;p&gt;The initial design was based around the organization having a few beacons, and some posts to show. This approach with large boxes and a three-column layout didn’t scale well with lots of content and beacons &lt;em&gt;(herningCentret have about 50 beacons deployed at the time of writing)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This was later remidied in the angular application. I will be sure to publish some of the more interesting details at some point when we’ve iterated on the initial user feedback.&lt;/p&gt;

&lt;p&gt;The editor was designed using the drag-n-drop paradigm as well, and reused some of the visual cues from the overview. The mobile preview was part of the original design mockups, and have remained ever since. The original idea was to make it as accurate to the iPhone screen size as possible. This has unfortunately become less feasible given the multitude of sizes that Apple now use - and we haven’t even touched upon the Android marketplace.&lt;/p&gt;

&lt;p&gt;It was therefore decided that other features were more useful at the moment, and a close approximation seems to work nicely for our customers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/emplate-editor-v1.png&quot; alt=&quot;The Content Editor, version 1&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;img-text&quot;&gt;The editor, with the mobile preview on the right.&lt;/p&gt;

&lt;p&gt;The Editor was implemented using the blade templating language of laravel, along with a lot of jquery-ui elements. The editor was one the first asynchronous screens we created, as much of the interaction we wanted to achieve in order to create a fluid and powerful content creation experience.&lt;/p&gt;

&lt;p&gt;The initial design paradigm of “elements” of different types has served us well so far. The monolith makes it easy to implement a new type in the editor and backend, while also implementing the mobile view that is to be served to the mobile clients. Having this consolidated into one location makes it easy to reuse code between the preview and the actual webviews served to the client.&lt;/p&gt;

&lt;p&gt;The next post will include some of the work we’ve done on the mobile clients, along with the next version of the dashboard (in Angular).&lt;/p&gt;

&lt;p&gt;See you around!&lt;/p&gt;

</description>
        <pubDate>Sat, 16 Jul 2016 19:02:37 +0200</pubDate>
        <link>http://hauthorn.me/2016/07/16/my-work-at-emplate</link>
        <guid isPermaLink="true">http://hauthorn.me/2016/07/16/my-work-at-emplate</guid>
        
        
        <category>emplate</category>
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Freelance work</title>
        <description>&lt;p&gt;I’ve been doing freelance work for my own clients and through a number of advertising and graphical agencies. I started out building simple static sites and dynamic sites in PHP and WordPress. By examining the code of other developers and through a lot of tutorials, books and other material, I started delving into learning object oriented programming and building applications for the desktop. Unfortunately, not a lot of businesses in rural Denmark need anything more than a simple portfolio website or a small e-commerce site.&lt;/p&gt;

&lt;div class=&quot;mdl-grid&quot;&gt;
	&lt;div class=&quot;mdl-cell mdl-cell--6-col&quot;&gt;
		&lt;img src=&quot;/assets/images/businessparkstruer.jpg&quot; alt=&quot;BusinessPark Struer site&quot; /&gt;
		&lt;p class=&quot;img-text&quot;&gt;The local co-working space BusinessPark Struer&lt;/p&gt;
	&lt;/div&gt;
	&lt;div class=&quot;mdl-cell mdl-cell--6-col&quot;&gt;
		&lt;img src=&quot;/assets/images/conpleks.jpg&quot; alt=&quot;Conpleks site&quot; /&gt;
		&lt;p class=&quot;img-text&quot;&gt;Conpleks.com&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;I therefore started coding and implementing the designs of a web and graphical design business called &lt;a href=&quot;http://www.kommuniklame.dk/&quot;&gt;Kommuniklame&lt;/a&gt;, and other clients soon followed. Before I went on to start &lt;a href=&quot;http://emplate.it&quot;&gt;Emplate&lt;/a&gt;, I had done more than 200 projects. The projects varied in size from a new image gallery on a portfolio site, to a complete webshops including custom campaign subsites and inventory management and automation.&lt;/p&gt;

&lt;p&gt;I discovered the great &lt;a href=&quot;https://laravel.com/&quot;&gt;Laravel&lt;/a&gt;, and also built custom applications for myself and two large clients in the automotive industry and consumer electronics, which I’m not allowed to disclose publicly.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Project&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Eloquent&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timesheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasMany&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Timesheet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'project_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scopeInvoicable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'status'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orderBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'updated_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'DESC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scopeThisMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$next_month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Y-m-d H:i:s'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
			&lt;span class=&quot;nb&quot;&gt;strtotime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first day of next month today'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this_month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Y-m-d H:i:s'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;strtotime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first day of this month today'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;whereBetween&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'invoicedate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$next_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Some code from a timetracking project for internal use in Laravel 3 (i think). Please note the lovely use of &lt;code class=&quot;highlighter-rouge&quot;&gt;array()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I hope to open-source some of the work I’ve done in the near future.&lt;/p&gt;

</description>
        <pubDate>Sat, 16 Jul 2016 12:00:00 +0200</pubDate>
        <link>http://hauthorn.me/2016/07/16/freelance-work</link>
        <guid isPermaLink="true">http://hauthorn.me/2016/07/16/freelance-work</guid>
        
        
        <category>freelance</category>
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Jekyll new site</title>
        <description>&lt;p&gt;I’ve built a new site during my vacation using Jekyll and Material Design Lite. The primary reason was to allow for easier incremental updates and blog posts about (interesting) work that I do. I wanted to change my approach from complete overhauls every 6 months, and hopefully make it easier for myself to update more frequently.&lt;/p&gt;

&lt;h4 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h4&gt;
&lt;p&gt;It’s been a breeze to use &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; to build the site. Jekyll is basically a tool to build your website with all the features of using a CMS, but without ever having to fiddle with a database.
It compiles assets, static files and content files to a complete static site, which you can deploy anywhere.&lt;/p&gt;

&lt;h4 id=&quot;material-design-lite&quot;&gt;Material Design Lite&lt;/h4&gt;
&lt;p&gt;I wanted the site to use the material design language from Google, but didn’t want to bother with implementing the components myself. &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Material Design Lite&lt;/a&gt; to the rescue!&lt;/p&gt;

&lt;div class=&quot;mdl-grid&quot;&gt;
	&lt;div class=&quot;mdl-cell mdl-cell--4-col&quot;&gt; &lt;/div&gt;
&lt;div class=&quot;mdl-cell mdl-cell--4-col&quot;&gt;
	&lt;img src=&quot;/assets/images/material-design-lite-logo.png&quot; alt=&quot;Material Design Lite logo&quot; /&gt;
	&lt;p class=&quot;image-text&quot;&gt;The Material Design Lite logo. &lt;br /&gt;
	© Google, 2015&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;mdl-cell mdl-cell--4-col&quot;&gt; &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;From their website:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Material Design Lite lets you add a Material Design look and feel to your websites.
It doesn’t rely on any JavaScript frameworks and aims to optimize for cross-device use, gracefully degrade in older browsers, and offer an experience that is immediately accessible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was a good match for my intentions, as I had no intention on using jQuery or fancy interaction for the site. Also, they had color theming built into the framework, which makes it easy to customize colors to my liking.&lt;/p&gt;

&lt;p&gt;Now I’m off to the lake here in Monvalle, Italy. See you soon!&lt;/p&gt;

</description>
        <pubDate>Fri, 15 Jul 2016 12:00:00 +0200</pubDate>
        <link>http://hauthorn.me/2016/07/15/new-site</link>
        <guid isPermaLink="true">http://hauthorn.me/2016/07/15/new-site</guid>
        
        
        <category>update</category>
        
        <category>site</category>
        
      </item>
    
  </channel>
</rss>
